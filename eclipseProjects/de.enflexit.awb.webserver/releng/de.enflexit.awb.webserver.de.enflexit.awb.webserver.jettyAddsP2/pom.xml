<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001 XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.enflexit.awb.webserver</groupId>
	<artifactId>de.enflexit.awb.webserver.p2Jetty</artifactId>
	<version>9.4.27-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<mortbayJasperVersion>8.5.49</mortbayJasperVersion>
		<orbitVersion>R20191115185527</orbitVersion>
		
		<tychoVersion>1.3.0</tychoVersion>
		<url.repository.snapshotDir>/awbWebserver/jettyAdds/</url.repository.snapshotDir>
		<url.repository.snapshotDomain>https://p2.enflex.it</url.repository.snapshotDomain>
		
		<repository.subDir>${url.repository.snapshotDir}</repository.subDir>
		<repository.domain>${url.repository.snapshotDomain}</repository.domain>
		<repository.updateSite>${repository.domain}${repository.subDir}</repository.updateSite>
		
	</properties>

	<repositories>
		<repository>
			<id>Orbit</id>
			<url>https://download.eclipse.org/tools/orbit/downloads/drops/${orbitVersion}/repository</url>
			<layout>p2</layout>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.reficio</groupId>
				<artifactId>p2-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<configuration>
							<categoryFileURL>category.xml</categoryFileURL>
							
							<p2>
							    <artifact>
							    	<id>org.apache.xalan:2.7.1.v201005080400</id>
							    	<source>true</source>
							    </artifact>
							    <artifact>
							    	<id>org.apache.xml.serializer:2.7.1.v201005080400</id>
							    	<source>true</source>
							    </artifact>
							</p2>
									
							<artifacts>
								
								<!-- SPI Fly Bundles -->
								<artifact><id>org.apache.aries.spifly:org.apache.aries.spifly.dynamic.bundle:1.2</id><source>true</source></artifact>
								
								<!-- Jars Required for Annotations -->
								<artifact><id>org.ow2.asm:asm:7.2</id><source>true</source></artifact>
								<artifact><id>org.ow2.asm:asm-commons:7.2</id><source>true</source></artifact>
								<artifact><id>org.ow2.asm:asm-tree:7.2</id><source>true</source></artifact>
								<artifact><id>javax.annotation:javax.annotation-api:1.3</id><source>true</source></artifact>
								
								<artifact><id>org.apache.geronimo.specs:geronimo-jta_1.1_spec:1.1.1</id><source>true</source></artifact>
								<artifact><id>org.eclipse.jetty.orbit:javax.mail.glassfish:1.4.1.v201005082020</id><source>true</source></artifact>
								
								<!-- From here jars for using JSP -->
								<artifact><id>org.mortbay.jasper:apache-el:${mortbayJasperVersion}</id><source>true</source></artifact>
								<artifact><id>org.mortbay.jasper:apache-jsp:${mortbayJasperVersion}</id><source>true</source></artifact>
								<artifact><id>org.eclipse.jetty.orbit:org.eclipse.jdt.core:3.8.2.v20130121</id><source>true</source></artifact>
								
								<!-- Jars Required for Glassfish JSTL -->
								<artifact><id>org.eclipse.jetty.orbit:javax.servlet.jsp.jstl:1.2.0.v201105211821</id><source>true</source></artifact>
								
								<!-- Jars Required for Apache JSTL -->
								<artifact><id>org.apache.taglibs:taglibs-standard-spec:1.2.1</id><source>true</source></artifact>
								<artifact><id>org.apache.taglibs:taglibs-standard-impl:1.2.1</id><source>true</source></artifact>
							</artifacts>

						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<!-- Enabling upload via ssh -->
		<extensions> 
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh-external</artifactId>
				<version>3.0.0</version>
			</extension>
		</extensions>
		
	</build>

	<profiles>
		<!-- This profile is used to upload the repo, use via 'mvn install -P p2Deploy' -->
		<profile>
			<id>p2Deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-p2-extras-plugin</artifactId>
						<version>${tychoVersion}</version>
						<executions>
							<execution>
								<id>include-already-deployed</id>
								<phase>install</phase>
								<goals>
									<goal>mirror</goal>
								</goals>
								<configuration>
									<source>
										<repository>
											<url>${repository.updateSite}</url>
										</repository>
									</source>
									<append>true</append>
									<!-- <mirrorMetadataOnly>true</mirrorMetadataOnly> -->
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Upload the repo to the server -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>1.0</version>
						<executions>
							<execution>
								<id>upload-repo</id>
								<phase>install</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.build.directory}/repository/</fromDir>
									<includes>**</includes>
									<toDir>/subDomains/p2.enflex.it${repository.subDir}</toDir>
									<url>scpexe://enflex.it</url>
									<serverId>update-site-enflexit</serverId>
									<!-- Points to your "~/.m2/settings.xml", where the connection settings 
										are stored as shown below <servers> <server> <id>update-site-enflexit</id> 
										<username>admin.enflex.it</username> <privateKey>${user.home}/.ssh/id_YOURKEY</privateKey> 
										<configuration> <sshExecutable>plink</sshExecutable> <scpExecutable>pscp</scpExecutable> 
										<sshArgs></sshArgs> </configuration> </server> </servers> Also see: - https://maven.apache.org/plugins/maven-deploy-plugin/examples/deploy-ssh-external.html, 
										- https://maven.apache.org/settings.html#Servers, - https://stackoverflow.com/questions/2733447/can-maven-wagon-plugin-use-a-private-key-for-scp -->
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>p2DeployClean</id>
			<build>
				<plugins>
					<!-- Upload the repo to the server -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>1.0</version>
						<executions>
							<execution>
								<id>upload-repo</id>
								<phase>install</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.build.directory}/repository/</fromDir>
									<includes>**</includes>
									<toDir>/subDomains/p2.enflex.it${repository.subDir}</toDir>
									<url>scpexe://enflex.it</url>
									<serverId>update-site-enflexit</serverId>
									<!-- Points to your "~/.m2/settings.xml", where the connection settings 
										are stored as shown below <servers> <server> <id>update-site-enflexit</id> 
										<username>admin.enflex.it</username> <privateKey>${user.home}/.ssh/id_YOURKEY</privateKey> 
										<configuration> <sshExecutable>plink</sshExecutable> <scpExecutable>pscp</scpExecutable> 
										<sshArgs></sshArgs> </configuration> </server> </servers> Also see: - https://maven.apache.org/plugins/maven-deploy-plugin/examples/deploy-ssh-external.html, 
										- https://maven.apache.org/settings.html#Servers, - https://stackoverflow.com/questions/2733447/can-maven-wagon-plugin-use-a-private-key-for-scp -->
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>